service: dymek-api

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: nodejs6.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["MarkersDynamoDBTable", "Arn" ] }
  environment:
    MARKERS_TABLE: ${self:custom.markersTableName}
    MARKERS_TYPES_TABLE: ${self:custom.markersTypesTableName}
    DEV_DB_PORT: ${self:custom.dynamodb.start.port}

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  webpackIncludeModules: true
  markersTableName: 'markers-table-${self:provider.stage}'
  markersTypesTableName: 'markers-types-table-${self:provider.stage}'
  dynamodb:
    start:
      migrate: true
      port: 9123

functions:
  markers:
    handler: server/index.handler
    events:
      - http:
          path: /api/markers
          method: get
          cors:
            origins:
              - '*'
            headers:
              - x-dymek-user-id
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
      - http:
          path: /api/markers
          method: post
          cors:
            origins:
              - '*'
            headers:
              - x-dymek-user-id
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
    allowCredentials: false


resources:
  Resources:
    MarkersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: hashKey
            AttributeType: N
          -
            AttributeName: createdAt
            AttributeType: S
          -
            AttributeName: geohash
            AttributeType: N
          -
            AttributeName: userId
            AttributeType: S
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: hashKey
            KeyType: HASH
          -
            AttributeName: createdAt
            KeyType: RANGE
        LocalSecondaryIndexes:
          -
            IndexName: 'geohash-index'
            KeySchema:
              -
                KeyType: HASH
                AttributeName: hashKey
              -
                KeyType: RANGE
                AttributeName: geohash
            Projection:
              ProjectionType: ALL
        GlobalSecondaryIndexes:
          -
            IndexName: userId-createdAt-index
            KeySchema:
              -
                AttributeName: userId
                KeyType: HASH
              -
                AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          -
            IndexName: id-index
            KeySchema:
              -
                AttributeName: id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 5
        TableName: ${self:custom.markersTableName}
